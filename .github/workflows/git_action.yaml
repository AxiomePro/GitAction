name: GitHub Action MyRPG
run-name: ${{ github.actor }} is ${{ github.event_name }}ing on ${{ github.ref_name }} branch ‚úò

on:
  workflow_dispatch:
  push:
    branches-ignore:
      - 'ga-i/*'
  pull_request:
    branches-ignore:
      - 'ga-i/*'

env:
  MIRROR_REPO: EpitechPromo2028/B-MUL-200-PAR-2-1-myrpg-paul.colagrande
  MAX_SIZE: 30000
  EXECUTABLE: my_rpg
  FIRST_NAME: Vierre33
  FIRST_AT: '509795682618703874'
  SECOND_NAME: AxiomePro
  SECOND_AT: '365885753730924555'
  THIRD_NAME: BjrTom
  THIRD_AT: '409776240753508375'
  FOURTH_NAME: ncr-t
  FOURTH_AT: '441612891548942337'
  FIFTH_NAME: NULL
  FIFTH_AT: NULL
  CUSTOM_IMAGE: https://cdn.discordapp.com/attachments/1229787418031427647/1237526646429585450/robot-removebg-preview.png?ex=663bf800&is=663aa680&hm=63f12e3de6594db4e54f4481a35ce455bf73d45b82e558ccce6ced5475528b9d&
# ssh key to set as scret: GIT_SSH_PRIVATE_KEY
# webhhok link to set as scret: DISCORD_WEBHOOK
jobs:
  check_commit:
    if: ${{ github.repository_owner != 'EpitechPromo2028' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: webiny/action-conventional-commits@v1.3.0
      - if: ${{ failure() }}
        run: echo -ne "**Commit** standart not respected ! " > error.txt
      - name: Upload error
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: task_commit
          path: error.txt
      - if: ${{ failure() }}
        run: exit 1

  check_repository_size:
    if: ${{ github.repository_owner != 'EpitechPromo2028' }}
    runs-on: ubuntu-latest
    env:
      EXIT: false
    steps:
      - uses: actions/checkout@v4
      - name: Set env variable
        run: echo "SIZE=$(du -s --exclude=.git | awk '{print $1}')" >> $GITHUB_ENV
      - name: Check size
        run: |
          if [ $SIZE -gt $MAX_SIZE ]; then
            echo "EXIT=true" >> $GITHUB_ENV
          fi
      - if: ${{ env.EXIT == 'true' }}
        run: |
          echo "::error title=Repo size over $MAX_SIZE"B" !::üö´ Actual: $SIZE"B""
          echo -ne "Repository **size** excess ! " > error.txt
      - name: Upload errors
        if: ${{ env.EXIT == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: task_repo_size
          path: error.txt
      - if: ${{ env.EXIT == 'true' }}
        run: exit 1

  check_coding_style:
    if: ${{ github.repository_owner != 'EpitechPromo2028' }}
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    env:
      EXIT: false
    steps:
      - uses: actions/checkout@v4
      - name: Coding style
        run: check.sh $(pwd) $(pwd)
      - name: Set env variable
        run: echo "NB_ERRORS=$(cat coding-style-reports.log | wc -l)" >> $GITHUB_ENV
      - name: Display coding style errors
        run: |
          if [ $NB_ERRORS -ge 1 ]; then
            while IFS= read -r line
            do
              FILE=$(echo $line | cut -d ':' -f 1)
              LINE=$(echo $line | cut -d ':' -f 2)
              TYPE=$(echo $line | cut -d ':' -f 3)
              ERROR=$(echo $line | cut -d ':' -f 4)
              echo "::error file=$FILE,line=$LINE,title=$ERROR coding style error::‚ùå $TYPE"
            done < coding-style-reports.log
            echo "EXIT=true" >> $GITHUB_ENV
          fi
      - if: ${{ env.EXIT == 'true' }}
        run: |
          echo "::error title=Coding style errors !::üö´ $NB_ERRORS errors"
          echo -ne "Coding **style** errors ! " > error.txt
      - name: Upload errors
        if: ${{ env.EXIT == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: task_coding_style
          path: error.txt
      - if: ${{ env.EXIT == 'true' }}
        run: exit 1

  check_compilation:
    if: ${{ github.repository_owner != 'EpitechPromo2028' }}
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker
    env:
      EXIT: false
    steps:
      - uses: actions/checkout@v4
      - name: Compilation
        timeout-minutes: 2
        run: make && make clean
      - name: Check executables
        run: |
          if [ ! -x $EXECUTABLE ]; then
            echo "EXIT=true" >> $GITHUB_ENV
          fi
      - if: ${{ failure() || env.EXIT == 'true' }}
        run: |
          echo "::error title=Compilation error !::üö´ $EXECUTABLE not executable"
          echo -ne "Program not **compiling** ! " > error.txt
      - name: Upload error
        if: ${{ failure() || env.EXIT == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: task_compilation
          path: error.txt
      - if: ${{ failure() || env.EXIT == 'true' }}
        run: exit 1

  push_to_mirror:
    needs: [ check_commit, check_repository_size, check_coding_style, check_compilation ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
            git@github.com:${{ env.MIRROR_REPO }}.git
          ssh_private_key:
            ${{ secrets.GIT_SSH_PRIVATE_KEY }}

  setup_fail_webhook:
    needs: [ check_commit, check_repository_size, check_coding_style, check_compilation ]
    if: ${{ failure() }}
    runs-on: ubuntu-latest
    steps:
      - name: Choose mention
        run: |
          if [ ${{ github.actor }} == $FIRST_NAME ]; then
            MENTION="<@$FIRST_AT>"
          elif [ ${{ github.actor }} == $SECOND_NAME ]; then
            MENTION="<@$SECOND_AT>"
          elif [ ${{ github.actor }} == $THIRD_NAME ]; then
            MENTION="<@$THIRD_AT>"
          elif [ ${{ github.actor }} == $FOURTH_NAME ]; then
            MENTION="<@$FOURTH_AT>"
          elif [ ${{ github.actor }} == $FIFTH_NAME ]; then
            MENTION="<@$FIFTH_AT>"
          else
            MENTION="@everyone"
          fi
          echo -ne "$MENTION" > mention.txt
      - name: Upload settings
        uses: actions/upload-artifact@v4
        with:
          name: settings
          path: mention.txt

  webhook_request:
    needs: setup_fail_webhook
    if: ${{ always() && github.repository_owner != 'EpitechPromo2028' }}
    runs-on: ubuntu-latest
    env:
      COLOR: 65280
      TEXT: "${{ github.event_name }}ed on **${{ github.ref_name }}**"
    steps:
      - uses: actions/checkout@v4
      - name: Download
        uses: actions/download-artifact@v4
      - name: Get settings
        run: |
          if [ -d settings ]; then
            echo "MENTION=$(cat settings/mention.txt)" >> $GITHUB_ENV
            echo "ERROR=$(cat task_*/error.txt)" >> $GITHUB_ENV
            echo "COLOR=$(echo -ne "16711680")" >> $GITHUB_ENV
            echo "TEXT=$(echo -ne "failed to ${{ github.event_name }} on **${{ github.ref_name }}**")" >> $GITHUB_ENV
            echo "IMAGE=$CUSTOM_IMAGE" >> $GITHUB_ENV
          fi;
      - name: Send a request to webhook
        run: |
          HASH=$(git rev-parse --short "$GITHUB_SHA")
          RESPONSE=$(curl -H "Content-Type: application/json" -X POST -d '{
            "username": "${{ github.event.head_commit.message }}",
            "content": "'"$MENTION"'",
            "embeds":
            [
              {
                "type": "rich",
                "title": "'"$ERROR"'",
                "description": "'"$TEXT"'",
                "color": '"$COLOR"',
                "thumbnail": {
                  "url": "'"$IMAGE"'"
                },
                "footer": {
                  "text": "commit hash: '"$HASH"'"
                },
                "author": {
                  "name": "${{ github.actor }}",
                  "url": "https://github.com/${{ github.actor }}",
                  "icon_url": "https://avatars.githubusercontent.com/u/${{ github.actor_id }}?v=4"
                },
                "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
              }
            ]
            }' ${{ secrets.DISCORD_WEBHOOK }})
            echo "Webhook server response: $RESPONSE"
